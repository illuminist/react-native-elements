// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rating Component should render 10 images 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  pointerEvents="auto"
  style={
    Array [
      Object {
        "display": "flex",
        "position": "relative",
      },
      undefined,
      Object {
        "height": 40,
        "width": 400,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {},
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </View>
  <AnimatedComponent
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {
          "overflow": "hidden",
        },
        Object {
          "width": 0,
        },
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </AnimatedComponent>
</View>
`;

exports[`Rating Component should render custom icon 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  pointerEvents="auto"
  style={
    Array [
      Object {
        "display": "flex",
        "position": "relative",
      },
      undefined,
      Object {
        "height": 40,
        "width": 200,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {},
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#ddd"
        name="help-outline"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#ddd"
        name="help-outline"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#ddd"
        name="help-outline"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#ddd"
        name="help-outline"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#ddd"
        name="help-outline"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </View>
  <AnimatedComponent
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {
          "overflow": "hidden",
        },
        Object {
          "width": 0,
        },
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#dba"
        name="help"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#dba"
        name="help"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#dba"
        name="help"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#dba"
        name="help"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#dba"
        name="help"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </AnimatedComponent>
</View>
`;

exports[`Rating Component should render images with the size of 30 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  pointerEvents="auto"
  style={
    Array [
      Object {
        "display": "flex",
        "position": "relative",
      },
      undefined,
      Object {
        "height": 30,
        "width": 150,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {},
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </View>
  <AnimatedComponent
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {
          "overflow": "hidden",
        },
        Object {
          "width": 0,
        },
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={30}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </AnimatedComponent>
</View>
`;

exports[`Rating Component should render in readonly mode 1`] = `
<View
  pointerEvents="none"
  style={
    Array [
      Object {
        "display": "flex",
        "position": "relative",
      },
      undefined,
      Object {
        "height": 40,
        "width": 200,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {},
      ]
    }
  >
    <Icon
      color="#FFC423"
      name="star-border"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star-border"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star-border"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star-border"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star-border"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
  </View>
  <AnimatedComponent
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {
          "overflow": "hidden",
        },
        Object {
          "width": 0,
        },
      ]
    }
  >
    <Icon
      color="#FFC423"
      name="star"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
    <Icon
      color="#FFC423"
      name="star"
      raised={false}
      reverse={false}
      reverseColor="white"
      size={40}
      style={
        Object {
          "flex": 1,
        }
      }
      underlayColor="white"
    />
  </AnimatedComponent>
</View>
`;

exports[`Rating Component should render without issues 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  pointerEvents="auto"
  style={
    Array [
      Object {
        "display": "flex",
        "position": "relative",
      },
      undefined,
      Object {
        "height": 40,
        "width": 200,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {},
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star-border"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </View>
  <AnimatedComponent
    style={
      Array [
        Object {
          "flexDirection": "row",
          "flexWrap": "nowrap",
          "position": "absolute",
        },
        Object {
          "overflow": "hidden",
        },
        Object {
          "width": 0,
        },
      ]
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        color="#FFC423"
        name="star"
        raised={false}
        reverse={false}
        reverseColor="white"
        size={40}
        style={
          Object {
            "flex": 1,
          }
        }
        underlayColor="white"
      />
    </TouchableOpacity>
  </AnimatedComponent>
</View>
`;
